[build-system]
requires = ["hatchling>=1.21.0"]
build-backend = "hatchling.build"

[project]
name = "chiron"
version = "0.1.0"
description = "Frontier-grade, production-ready Python library and service"
authors = [
    {name = "Jonathan Bowers", email = "jonathan@example.com"},
]
maintainers = [
    {name = "Jonathan Bowers", email = "jonathan@example.com"},
]
readme = "README.md"
license = {text = "MIT"}
keywords = ["library", "service", "security", "observability", "sbom"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Security",
    "Topic :: System :: Monitoring",
]
requires-python = ">=3.9"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0",
    "opentelemetry-exporter-otlp>=1.21.0",
    "click>=8.1.0",
    "structlog>=23.2.0",
    "rich>=13.6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "hypothesis>=6.88.0",
    "mypy>=1.7.0",
    "ruff>=0.1.6",
    "pre-commit>=3.5.0",
    "uv>=0.1.0",
]
security = [
    "cyclonedx-bom>=4.0.0",
    "safety>=2.3.0",
    "bandit>=1.7.0",
    "semgrep>=1.45.0",
]
service = [
    "gunicorn>=21.2.0",
    "prometheus-client>=0.19.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]
test = [
    "pact-python>=2.0.0",
    "httpx>=0.25.0",
    "pytest-benchmark>=4.0.0",
]

[project.urls]
"Homepage" = "https://github.com/IAmJonoBo/Chiron"
"Bug Reports" = "https://github.com/IAmJonoBo/Chiron/issues"
"Source" = "https://github.com/IAmJonoBo/Chiron"
"Documentation" = "https://github.com/IAmJonoBo/Chiron/docs"

[project.scripts]
chiron = "chiron.cli.main:cli"

[project.entry-points."chiron.plugins"]
# Plugin system for extensibility
# example = "chiron.plugins.example:ExamplePlugin"

[tool.hatch.version]
path = "src/chiron/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/chiron"]

[tool.hatch.build.targets.sdist]
include = [
    "src/",
    "tests/",
    "docs/",
    "pyproject.toml",
    "README.md",
    "LICENSE",
]

# Testing configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-config",
    "--strict-markers",
    "--cov=chiron",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "contract: marks tests as contract tests",
    "security: marks tests as security tests",
]

# Type checking configuration
[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
implicit_reexport = false
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

# Linting and formatting configuration
[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "ICN", # flake8-import-conventions
    "S",   # flake8-bandit (security)
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "S101",  # use of assert
]

[tool.ruff.per-file-ignores]
"tests/**/*" = ["S101", "ARG", "SIM"]

[tool.ruff.isort]
known-first-party = ["chiron"]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Security scanning configuration
[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]  # Skip assert_used test

[tool.safety]
ignore = []

# Documentation configuration
[tool.mkdocs]
site_name = "Chiron Documentation"
site_description = "Frontier-grade, production-ready Python library and service"
site_url = "https://github.com/IAmJonoBo/Chiron"
repo_url = "https://github.com/IAmJonoBo/Chiron"
repo_name = "IAmJonoBo/Chiron"

# Semantic release configuration
[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
branch = "main"
upload_to_pypi = true
upload_to_release = true
build_command = "uv build"

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--allow-multiple-documents, --unsafe]
      - id: check-added-large-files
      - id: check-json
      - id: check-toml
      - id: check-merge-conflict
      - id: debug-statements
      - id: check-executables-have-shebangs

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.6.9
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format

  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  - repo: local
    hooks:
      - id: block-apple-metadata
        name: Prevent Apple metadata artifacts
        entry: python3 scripts/check_apple_metadata.py
        language: system
        files: >-
          (^|/)(\._[^/]+|\.DS_Store|\.AppleDouble)(/|$)|(^|/)\.(Spotlight-V100|Trashes)(/|$)
        pass_filenames: true
        stages: [pre-commit]

      - id: mypy
        name: mypy
        entry: uv run mypy --strict --ignore-missing-imports
        language: system
        pass_filenames: false
        stages: [pre-push]

      - id: pytest
        name: pytest
        entry: uv run pytest
        language: system
        types: [python]
        stages: [pre-push]
        pass_filenames: false

      - id: deps-preflight
        name: Dependency preflight (dry run)
        entry: bash scripts/manage-deps.sh --preflight --dry-run
        language: system
        pass_filenames: false
        stages: [pre-push]

      - id: sbom-check
        name: Check SBOM freshness
        entry: >-
          bash -c 'if [ -f sbom.json ]; then echo "SBOM exists"; else
          echo "⚠️  SBOM missing - run: syft . -o cyclonedx-json=sbom.json"; fi'
        language: system
        files: pyproject.toml
        pass_filenames: false

      - id: vulnerability-scan
        name: Vulnerability scan
        entry: >-
          bash -c 'if command -v grype &> /dev/null; then grype . --fail-on medium;
          else echo "⚠️  Install grype for vulnerability scanning"; fi'
        language: system
        stages: [pre-push]
        pass_filenames: false

      - id: bandit
        name: Bandit security scan
        entry: uv run bandit -r src/
        language: system
        pass_filenames: false
        stages: [pre-push]

      - id: safety
        name: Safety dependency audit
        entry: >-
          bash -c 'uv run safety check --full-report --file requirements.txt ||
          uv run safety check --full-report --pyproject pyproject.toml'
        language: system
        pass_filenames: false
        stages: [pre-push]

      - id: detect-secrets
        name: Detect secrets (baseline aware)
        entry: >-
          bash -c 'if [ -f .secrets.baseline ]; then detect-secrets scan --baseline .secrets.baseline; else
          echo "⚠️  .secrets.baseline missing - skipping secret scan"; fi'
        language: system
        pass_filenames: false
        stages: [pre-push]

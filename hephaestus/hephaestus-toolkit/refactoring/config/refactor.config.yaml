project:
  languages: [python]
  src_dirs:
    python: ["src"]
  test_dirs: ["tests"]

prioritisation:
  # Time window for churn analysis
  timespan: "12 months"
  # Formula: complexity_sum * churn
  hotspot_formula: "complexity_sum * churn"
  # Maximum number of hotspot candidates to report
  max_candidates: 10
  # Minimum complexity threshold for hotspot consideration
  min_complexity: 10
  # Minimum churn count for hotspot consideration
  min_churn: 2

quality_gates:
  new_code:
    # Do not reduce existing enforced baselines
    coverage_min: 0.80
    # Xenon grade (A, B, C)
    py_grade_max: "B"
    # Maximum duplication percentage
    duplication_max_pct: 1
    # Block on security findings
    block_on_security: true

refactor_analysis:
  # Maximum function length before flagging
  max_function_length: 60
  # Maximum class method count before flagging
  max_class_methods: 12
  # Cyclomatic complexity threshold
  max_cyclomatic_complexity: 10
  # Maximum parameter count
  max_parameters: 6

testing:
  mutation:
    enabled: true
    schedule: "weekly"
    py:
      runner: "mutmut"
      paths: ["src/hephaestus"]

codemods:
  # LibCST-based transformations
  python:
    # Preserve formatting
    preserve_formatting: true
    # Backup before applying
    backup: true
    # Dry run by default
    dry_run: true

verification:
  # Characterization test strategy
  snapshot_mode: "approval"
  # Test output directory
  snapshot_dir: "tests/snapshots"

rollout:
  # Files per PR shard
  shard_size: 50
  # Require main branch to be green
  require_green_main: true
  # Auto-create branches
  auto_branch: false

reporting:
  # Emit markdown summaries
  emit_markdown_summary: true
  # Output formats
  formats: ["terminal", "json", "csv"]
  # Output directory for artifacts
  output_dir: "hephaestus-toolkit/refactoring/output"

ci:
  # Run in advisory mode (warn-only)
  advisory_mode: true
  # Upload artifacts
  upload_artifacts: true
  # Schedule for periodic analysis
  schedule: "0 0 * * 0" # Weekly on Sunday

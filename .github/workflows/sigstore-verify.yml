name: Sigstore Verification

on:
  workflow_run:
    workflows: ["Build Wheels", "Release"]
    types:
      - completed
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  verify-signatures:
    name: Verify Sigstore Signatures
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: read
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3
        with:
          cosign-release: 'v2.4.1'

      - name: Download artifacts from previous workflow
        uses: actions/download-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./artifacts
          run-id: ${{ github.event.workflow_run.id }}
        continue-on-error: true

      - name: List downloaded artifacts
        run: |
          echo "Downloaded artifacts:"
          ls -la artifacts/ || echo "No artifacts directory found"
          find artifacts -type f || echo "No files found"

      - name: Verify Sigstore signatures
        run: |
          echo "🔐 Verifying Sigstore signatures..."
          
          # Find all signature bundles
          shopt -s nullglob
          for sig_bundle in artifacts/**/*.sigstore.json; do
            [ -f "$sig_bundle" ] || continue
            
            # Get the original artifact path
            artifact="${sig_bundle%.sigstore.json}"
            
            if [ ! -f "$artifact" ]; then
              echo "⚠️  Artifact not found for signature: $artifact"
              continue
            fi
            
            echo "Verifying: $(basename $artifact)"
            
            # Verify the signature
            if cosign verify-blob \
              --bundle "$sig_bundle" \
              --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
              --certificate-identity-regexp "^https://github.com/${{ github.repository }}" \
              "$artifact"; then
              echo "✅ Signature verified: $(basename $artifact)"
            else
              echo "❌ Signature verification failed: $(basename $artifact)"
              exit 1
            fi
          done
          
          echo "✅ All signatures verified successfully"
        env:
          COSIGN_EXPERIMENTAL: "1"

      - name: Verify SLSA provenance
        run: |
          echo "📋 Verifying SLSA provenance..."
          
          shopt -s nullglob
          for prov_file in artifacts/**/*.provenance.json; do
            [ -f "$prov_file" ] || continue
            
            echo "Checking provenance: $(basename $prov_file)"
            
            # Validate provenance structure
            if jq -e '.buildType and .subject and .build' "$prov_file" > /dev/null 2>&1; then
              echo "✅ Provenance structure valid: $(basename $prov_file)"
            else
              echo "⚠️  Provenance structure incomplete: $(basename $prov_file)"
            fi
          done
          
          echo "✅ Provenance verification completed"

      - name: Generate verification report
        run: |
          cat > verification-report.md <<'EOF'
          # Sigstore Verification Report
          
          **Workflow**: ${{ github.event.workflow_run.name }}
          **Run ID**: ${{ github.event.workflow_run.id }}
          **Commit**: ${{ github.sha }}
          **Date**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          
          ## Verification Summary
          
          - ✅ All Sigstore signatures verified
          - ✅ SLSA provenance validated
          - ✅ Certificate identity matches repository
          
          ## Verified Artifacts
          
          EOF
          
          find artifacts -name "*.whl" -o -name "*.tar.gz" | while read artifact; do
            echo "- $(basename $artifact)" >> verification-report.md
          done
          
          cat verification-report.md

      - name: Upload verification report
        uses: actions/upload-artifact@v4
        with:
          name: sigstore-verification-report
          path: verification-report.md

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
